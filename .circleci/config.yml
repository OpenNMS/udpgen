version: 2.1


executors:
  docker-executor:
    docker:
      - image: docker:git

commands:
  docker-registry-login:
    description: "Connect to Docker Registry"
    steps:
      - run:
          name: DockerHub Login
          command: |
            if [ -n "${DOCKERHUB_LOGIN}" ]; then
              printf "${DOCKERHUB_PASS}" | docker login -u ${DOCKERHUB_LOGIN} --password-stdin
            else
              echo "WARNING: dockerhub login not found."
            fi

jobs:
  build:
    docker:
      - image: buildpack-deps:jammy
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update && apt install -y cmake libsnmp-dev
      - run:
          name: Build binary
          command: |
            mkdir build && cd build
            cmake ..
            make
      - store_artifacts:
          path: ./build/udpgen
      - persist_to_workspace:
          root: ~/
          paths:
            - ./project/build/udpgen
  build-docker:
    executor: docker-executor
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Build Docker Image
          command: |
            docker build -t opennms/udpgen:latest .
      - run:
          name: Export Docker Image as artifact
          command: docker image save opennms/udpgen:latest -o udpgen-docker-image
      - store_artifacts:
          path: ./udpgen-docker-image
      - persist_to_workspace:
          root: ~/
          paths:
            - ./project/udpgen-docker-image
  publish-docker-image-latest:
    executor: docker-executor
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ~/
      - docker-registry-login
      - run:
          name: Load Docker Container Image File
          command: |
            docker image load -i ./udpgen-docker-image
      - run:
          name: Publish to DockerHub
          command: |
            docker push opennms/udpgen:latest

workflows:
  build:
    jobs:
      - build
      - build-docker:
          requires:
            - build
      - publish-docker-image-latest:
          context: 
            - Service Principal
            - docker-publish-account
          requires:
            - build-docker
          filters:
            branches:
              only: master
